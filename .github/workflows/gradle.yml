# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build and release jar

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Execute permissions for Linux
      run: chmod +x gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
      with:
        arguments: build
          # deploiement automatique de l'application pour qu'une release soit generee a chaque push sur la branche main
    - name: Create release
      id: release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: false
        title: "Development Build"
        files: ./app/build/libs/*.jar
    - name: test
      run: echo "${{ steps.release.outputs.upload_url }}"
    outputs:
      output_url: ${{ steps.release.outputs.upload_url }}
      
  release:
    name: release
    needs: [build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: test
        if: matrix.os == 'macos-latest'
        run: echo "${{ needs.build.outputs.output_url }}"
      - name: Build with Gradle
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build

      - name: Grant execution permission for Linux and Macos
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: chmod +x gradlew
      - name: Build installer with jpackage
        run: ./gradlew jpackage
      - name: find file
        if: matrix.os == 'macos-latest'
        run: ls ./app/build/dist

      - name: Release for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.output_url }}
          asset_path: ./app/build/dist/app_1.0.0-1_amd64.deb
          asset_name: ClavardEZ-1.0.0.deb
          asset_content_type: application/deb

      - name: Release for Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.output_url }}
          asset_path: ./app/build/dist/ClavardEZ-1.0.0.exe
          asset_name: ClavardEZ-1.0.0.exe
          asset_content_type: application/exe

      - name: Release for MacOS
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.output_url }}
          asset_path: ./app/build/dist/ClavardEZ-1.0.0.dmg
          asset_name: ClavardEZ-1.0.0.dmg
          asset_content_type: application/dmg
