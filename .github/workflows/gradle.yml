# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os : [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Execute permissions for Linux and MacOS
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: chmod +x gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
      with:
        arguments: build
    - name: Generate installers
      run: ./gradlew jpackage
      
    # deploiement automatique de l'application pour qu'une release soit generee a chaque push sur la branche main
    - name: Release on Linux
      uses: softprops/action-gh-release@v1
      if: matrix.os == 'ubuntu-latest'
      with:
        files: |
          ./app/build/libs/*.jar
          ./app/build/dist/*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Release on Windows
      uses: softprops/action-gh-release@v1
      if: matrix.os == 'windows-latest'
      with:
        files: |
          ./app/build/dist/*.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Release on MacOS
      uses: softprops/action-gh-release@v1
      if: matrix.os == 'macos-latest'
      with:
        files: |
          ./app/build/dist/*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
