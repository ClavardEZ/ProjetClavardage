/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // jpackage to generate executables
    id "org.panteleyev.jpackageplugin" version "1.3.1"
}

version = '1.0.0'

compileJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // SQLITE JDBC
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'

    // Java Dirs https://mvnrepository.com/artifact/net.harawata/appdirs
    implementation group: 'net.harawata', name: 'appdirs', version: '1.2.1'
}

// Main class name
mainClassName = 'ProjetClavardage.App'

application {
    // Define the main class for the application.
    mainClass = "$mainClassName"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

// executable jar
// TODO may be depreciated, see latest
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': "$mainClassName"
        )
    }

    from {
        configurations.runtimeClasspath.collect {it.isDirectory() ? it : zipTree(it)}
    }
}

tasks.jpackage {
    input = "${buildDir}/libs"
    destination = "${buildDir}/dist"

    appName = "ClavardEZ"
    appVersion = project.version
    type = org.panteleyev.jpackage.ImageType.DEFAULT
    vendor = "Clavardeurs"

    mainJar = jar.archiveFileName.get()
    mainClass = "$mainClassName"

    javaOptions = application.applicationDefaultJvmArgs

    arguments = ["default", "9000", "9000", "9002", "9002", "true"]

    addModules = ["jdk.management.jfr"]

    // Linux
    linuxPackageName = jar.archiveBaseName.get()
    linuxShortcut = true

    icon = "${buildDir}/resources/main/logo_white.png"

    // Windows
    winMenu = true
    winDirChooser = true
    winShortcut = true

    windows {
        winConsole = false
        icon = "${buildDir}/resources/main/logo_white.ico"
    }

    // MacOS
    macPackageName = jar.archiveBaseName.get()

    mac {
        icon = "${buildDir}/resources/main/logo_white.icns"
    }
}

jpackage.dependsOn(jar)
